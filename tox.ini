[base]
name = neuror
testdeps =
    mock
    nose

[tox]
envlist =
    py36
    py36-{plotly,docs,lint,coverage}

minversion = 3.1.0
# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true

[testenv]
basepython = python3.6
deps = {[base]testdeps}
commands = nosetests --logging-filter=-matplotlib --ignore-files test_plotly_extra.py tests

[testenv:py36-plotly]
extras = plotly
commands = nosetests --logging-filter=-matplotlib tests/test_plotly_extra.py

[testenv:py36-lint]
deps =
    pycodestyle
    pylint
commands =
    pycodestyle {[base]name}
    pylint {[base]name}

[testenv:py36-coverage]
extras = plotly
deps =
    {[base]testdeps}
    coverage
commands =
    coverage run --source {[base]name} {envbindir}/nosetests
    coverage report --show-missing
    coverage xml

[testenv:py36-docs]
changedir = doc
extras = docs
# make warnings into errors with -W sphinx option
commands =
	make clean
	make html SPHINXOPTS=-W
whitelist_externals = make

# E731: do not assign a lambda expression, use a def
# W503: line break after binary operator
# W504: line break before binary operator
[pycodestyle]
ignore = E731,W503,W504
max-line-length = 100
